-- primary keys must be definitely unique 
                                        -- COLLECTIONS VISUAL: 
-----------------------------------------------------------------------------------------------------------
--  |       |                Year 2019                        |                Year 2020
--  |------------------------------------------------------------------------------------------------------
--  | ID1   |       MachineName1     |       MachineName2     |
--  | diane | Coin1 | Coin2 | Coin 3 | Coin1 | Coin2 | Coin 3 |
--  |       |   1   |   0   |    1   |   0   |   1   |    0   |
--  |------------------------------------------------------------------------------------------------------
--  | ID2   |       MachineName1     |       MachineName2     |
--  |       | Coin1 | Coin2 | Coin 3 | Coin1 | Coin2 | Coin 3 |
--  |       |   1   |       |    1   |       |       |        |
-----------------------------------------------------------------------------------------------------------
-- psql pennydb -a -f revisedDB.psql  

-- DROP TABLE IF EXISTS users cascade;
-- DROP TABLE IF EXISTS machines cascade;
-- DROP TABLE IF EXISTS collections cascade;
-- DROP TABLE IF EXISTS coins cascade;
-- DROP TABLE IF EXISTS locations cascade;

---- uncomment below if updating function names
-- DROP FUNCTION insert_user(TEXT, TEXT, TEXT);
-- DROP FUNCTION get_user_map_data(INT);
-- DROP FUNCTION create_machine(TEXT);
-- DROP FUNCTION insert_machine(INT, TEXT, TEXT, TEXT, DECIMAL, DECIMAL);
-- DROP FUNCTION insert_coin_entry (INT, INT, INT);
-- DROP FUNCTION delete_coin_entry (INT, INT, INT);

CREATE TABLE users(
    id SERIAL,
    user_name TEXT,
    email TEXT,
    pass TEXT,
    PRIMARY KEY (id) 
);

-- machine has its own table because two other tables depend on it 
-- machine locations are the same but machines can have seasonal coin designs 
CREATE TABLE machines(
    id SERIAL PRIMARY KEY,
    machinename TEXT
);

CREATE TABLE locations(
    id SERIAL PRIMARY KEY,
    latitude_value DECIMAL(7,3),        
    longitude_value DECIMAL(7,3),
    fk_machine_id INT REFERENCES machines (id)  
);

CREATE TABLE coins(
    id SERIAL PRIMARY KEY,
    coinname text,
    fk_machine_id INT REFERENCES machines (id)
);

CREATE TABLE collections(
    id SERIAL,
    PRIMARY KEY (id),
    coin_year INT, 
    fk_user_id INT REFERENCES users (id),
    fk_coins_id INT REFERENCES coins (id)
);

-- registration 
CREATE OR REPLACE FUNCTION insert_user(username TEXT, mail TEXT, pw TEXT) RETURNS void AS
    $$
    BEGIN
        INSERT INTO users (user_name, email, pass) VALUES (username, mail, pw);
    END;
    $$ LANGUAGE PLPGSQL;

-- for every machine you add, you insert 3 coins at the same time 
CREATE OR REPLACE FUNCTION create_machine(machine TEXT) RETURNS void AS
    $$
    BEGIN
        INSERT INTO machines (machinename) VALUES (machine);
    END;
    $$ LANGUAGE PLPGSQL;

-- for admin to create machines and markers on the map 
CREATE OR REPLACE FUNCTION insert_machine(fk_machine INT, coin_one TEXT, coin_two TEXT, coin_three TEXT, latitude_input DECIMAL, longitude_input DECIMAL) RETURNS void AS
    $$
    BEGIN
        INSERT INTO coins (coinname, fk_machine_id) VALUES (coin_one, fk_machine);
        INSERT INTO coins (coinname, fk_machine_id) VALUES (coin_two, fk_machine);
        INSERT INTO coins (coinname, fk_machine_id) VALUES (coin_three, fk_machine);
        INSERT INTO locations (latitude_value, longitude_value, fk_machine_id) VALUES (latitude_input, longitude_input, fk_machine);
    END;
    $$ LANGUAGE PLPGSQL;

-- for users to record the coin they collected. hasn't been accessible by user yet 
CREATE OR REPLACE FUNCTION insert_coin_entry (fk_userid_input INT, fk_coins INT, input_year INT) RETURNS void AS
    $$
    BEGIN
        INSERT INTO collections(fk_user_id, fk_coins_id, coin_year) VALUES (fk_userid_input, fk_coins, input_year);
    END;
    $$ LANGUAGE PLPGSQL;

-- for users to remove a coin out of their collection (ex/ if they accidentally submit the entry or lost a coin) - hasn't been accessible by user yet
CREATE OR REPLACE FUNCTION delete_coin_entry (fk_user INT, fk_coins INT, input_year INT) RETURNS void AS
    $$
    BEGIN
        DELETE FROM collections WHERE fk_user_id = fk_userid_input AND fk_coins_id = fk_coins AND coin_year = input_year; 
    END;
    $$ LANGUAGE PLPGSQL;

-- call to load all the coins that the user owns 
CREATE OR REPLACE FUNCTION get_user_map_data (input_user_name INT) 
    RETURNS TABLE (
        fkid INT, 
        name TEXT,
        year INT,
        coinname TEXT,
        machinename TEXT, 
        latitude_value DECIMAL,
        longitude_value DECIMAL        
    )
    AS $$ 
    BEGIN 
        RETURN QUERY 
            SELECT u.id, u.user_name, col.coin_year, c.coinname, m.machinename, l.latitude_value, l.longitude_value
            FROM (
                SELECT id, user_name
                FROM users 
                WHERE id = input_user_name
            ) u
            LEFT JOIN collections col ON col.fk_user_id = u.id
            LEFT JOIN coins c ON c.id = col.fk_coins_id
            LEFT JOIN machines m ON m.id = c.fk_machine_id
            LEFT JOIN locations l ON l.fk_machine_id = m.id;  
    END; 
    $$ 
    LANGUAGE PLPGSQL;


SELECT insert_user('diane', 'd@gmail.com', 'p0ma');
SELECT insert_user('chandler', 'c@gmail.com', 'lavitar');

SELECT create_machine('Penny Arcade #1');
SELECT insert_machine(1, 'Peter Pan, Walts "Leave Todayâ€¦"', 'Mickey, Walts "Do the Impossible" Castle', 'Walts "If you can dream it."', 33.811259, -117.919210);
SELECT create_machine('Penny Arcade #2');
SELECT insert_machine(2, 'Mary Poppins full portrait', 'Mary Poppins Flying', 'Mary Poppins with penguins', 33.811259, -117.919210);
SELECT create_machine('Opera House Exit #1');
SELECT insert_machine(3, 'FANTASY LAND, Tinker Bell', 'TOONTOWN, Mickey', 'ADVENTURE LAND Donald', 33.810302, -117.918539);
SELECT create_machine('Opera House Exit #2');
SELECT insert_machine(4, 'Pirate Goofy', 'Mickey Frontierland', 'Pluto Tomorrowland', 33.810302, -117.918540);
SELECT create_machine('Opera House Exit #3');
SELECT insert_machine(5, 'Main Street USA', 'Let The Memories Begin', 'Fox Critter Country', 33.810302, -117.918541);
SELECT create_machine('Fantasy Faire');
SELECT insert_machine(6, 'Frozens Kristoff, Sven, & Olaf', 'Frozens Elsa and Anna', 'Frozens Olaf', 33.812590, -117.919415);
SELECT create_machine('Small World Toy Shop');
SELECT insert_machine(7, 'Small World Attraction', 'Small World Clock Happy Face', 'Small World Dolls', 33.814430, -117.918100);
SELECT create_machine('Toontown Gag Factory');
SELECT insert_machine(8, 'Baby Goofy', 'Baby Mickey and Pluto', 'Baby Minnie Mouse', 33.815, -117.918);

SELECT insert_coin_entry(1, 1, 2019);
SELECT insert_coin_entry(1, 3, 2019);

SELECT * FROM get_user_map_data(1); 

-- SELECT * FROM coins
-- LEFT JOIN machines ON machines.id = coins.fk_machine_id
-- LEFT JOIN locations ON locations.fk_machine_id = machines.id;

SELECT * FROM users; 
